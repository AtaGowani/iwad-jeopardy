{"version":3,"sources":["index.js"],"names":["window","app","angular","module","config","$router","$location","when","templateUrl","controller","html5Mode","directive","$scope","$elm","$attrs","bind","evt","which","$apply","$eval","ngEnter","preventDefault","think","$","questionMdl","answerMdl","scoreboard","stealMdl","questions","teams","score","current","player","time","modal","getJSON","data","width","Object","keys","length","height","i","hasOwnProperty","id","a","b","toLowerCase","replace","start","num","substr","split","map","_","ask","category","points","question","li","is","addClass","setTimeout","get","play","on","e","Math","round","duration","currentTime","right","parseInt","wrong","next","pause","steal","index","undefined"],"mappings":"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","file":"index.min.js","sourcesContent":["/**\n * js/index.js - w3bp\n * Basic AngularJS setup for routing.\n * \n * Licensed under MIT license.\n * Copyright (C) 2016 Karim Alibhai.\n */\n\nwindow.app = function () {\n    'use strict';\n\n    const app = angular.module('w3bp', ['ngRoute', 'ngAnimate']);\n\n    app.config(['$routeProvider', '$locationProvider', ($router, $location) => {\n        $router.when('/', {\n            templateUrl: '/views/index.html',\n            controller: 'GameCtl'\n        });\n\n        $location.html5Mode(true);\n    }]);\n\n    app.directive('ngEnter', () => ($scope, $elm, $attrs) => {\n        $elm.bind('keydown keypress', evt => {\n            if ( evt.which === 13 ) {\n                $scope.$apply(() => $scope.$eval($attrs.ngEnter));\n                evt.preventDefault();\n            }\n        });\n    });\n\n    app.controller('GameCtl', ['$scope', $scope => {\n        let think = $('#think'),\n            questionMdl = $('#questionMdl'),\n            answerMdl = $('#answerMdl'),\n            scoreboard = $('#scoreboard'),\n            stealMdl = $('#stealMdl');\n\n        $scope.questions = {};\n        $scope.teams = [];\n        $scope.score = [];\n        $scope.current = { player: 0 };\n        $scope.time = 30;\n\n        $('#teamsMdl').modal('show');\n\n        $.getJSON('/questions.json', function (data) {\n            $scope.$apply(function () {\n                $scope.questions = data;\n            });\n        });\n\n        $scope.width = () => 100 / Object.keys($scope.questions).length;\n        $scope.height = () => {\n            for (let i in $scope.questions) {\n                if ($scope.questions.hasOwnProperty(i)) {\n                    return 100 / Object.keys($scope.questions[i]).length;\n                }\n            }\n        };\n\n        $scope.id = (a, b) => (a + '' + b).toLowerCase().replace(/[^a-z0-9]+/g, '-');\n\n        $scope.start = num => {\n            $scope.teams = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.substr(0, num).split('');\n            $scope.score = $scope.teams.map(_ => 0);\n            $('#teamsMdl').modal('hide');\n        };\n\n        $scope.ask = (category, points, question) => {\n            let li = $('[data-id=\"' + $scope.id(category, points) + '\"]');\n            if (li.is('.disabled')) return;\n\n            $scope.current.question = question;\n            $scope.current.category = category;\n            $scope.current.points = points;\n\n            li.addClass('clicked');\n            setTimeout(() => {\n                questionMdl.modal('show');\n                li.addClass('disabled');\n                think.get(0).play();\n            }, 2001);\n        };\n\n        think.on('timeupdate', () => {\n            let e = think.get(0);\n            $scope.$apply(() => $scope.time = Math.round(e.duration - e.currentTime));\n        });\n\n        $scope.right = () => {\n            $scope.score[$scope.current.player] += parseInt($scope.current.points);\n            $scope.current.player += 1;\n            if ($scope.current.player === $scope.teams.length) $scope.current.player = 0;\n            answerMdl.modal('hide');\n        };\n\n        $scope.wrong = () => {\n            $scope.current.player += 1;\n            if ($scope.current.player === $scope.teams.length) $scope.current.player = 0;\n            answerMdl.modal('hide');\n        };\n\n        $scope.next = () => {\n            think.get(0).pause();\n            think.get(0).currentTime = 0;\n\n            stealMdl.modal('hide');\n            questionMdl.modal('hide');\n            answerMdl.modal('show');\n        };\n\n        $scope.scoreboard = () => {\n            scoreboard.modal('toggle');\n        };\n\n        $scope.steal = index => {\n            if (index === undefined) {\n                think.get(0).pause();\n                think.get(0).currentTime = 0;\n\n                questionMdl.modal('hide');\n                stealMdl.modal('show');\n            } else {\n                $scope.score[index] += parseInt($scope.current.points);\n                $scope.current.player += 1;\n                if ($scope.current.player === $scope.teams.length) $scope.current.player = 0;\n\n                stealMdl.modal('hide');\n                answerMdl.modal('show');\n            }\n        };\n    }]);\n\n    return app;\n}();"],"sourceRoot":"/source/"}