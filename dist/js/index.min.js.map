{"version":3,"sources":["index.js"],"names":["window","app","angular","module","config","$router","$location","when","templateUrl","controller","html5Mode","$scope","questions","teams","score","current","player","$","modal","getJSON","data","$apply","width","Object","keys","length","height","i","hasOwnProperty","id","a","b","toLowerCase","replace","start","num","substr","split","map","_","ask","category","points","question","li","is","addClass","setTimeout","right","parseInt","wrong"],"mappings":";;;;;;;AAQAA,OAAOC,IAAM,WACT,GAAAA,GAAAC,QAAAC,OAAA,QAAA,UAAA,aAyEA,OAvEAF,GAAMG,QAAM,iBAAe,oBAAoB,SAAAC,EAA/CC,GAGID,EAAQE,KAAK,KADbC,YAAQ,oBACRC,WAAA,YAAkBH,EAAlBI,WAAA,MAMHT,EAPDQ,WAAA,WAAA,SAAA,SAAAE,GAUIA,EAAOC,aADPD,EAAAE,SACAF,EAAOG,SACPH,EAAOI,SAAPC,OAAA,GAEAC,EAAA,aAAAC,MAAmB,QAEnBD,EAAEE,QAAA,kBAAF,SAAAC,GAGIT,EAAOU,OAAO,WADhBV,EAAQC,UAAVQ,MAICT,EAJDW,MAAA,WAAA,MAAA,KAAAC,OAAAC,KAAAb,EAAAC,WAAAa,QAOAd,EAAOe,OAAS,WADhB,IAAO,GAAPC,KAAehB,GAAAC,UAAA,GAAMD,EAAMC,UAAYgB,eAAOD,GAA9C,MAAA,KAAAJ,OAAAC,KAAAb,EAAAC,UAAAe,IAAAF,QAKSd,EAAAkB,GAAA,SAAAC,EAAAC,GAAA,OAAAD,EAAA,GAAAC,GAAAC,cAAAC,QAAA,cAAA,MAERtB,EANDuB,MAAA,SAAAC,GAWIxB,EAAOE,MAAQ,6BAA6BuB,OAAO,EAAGD,GAAKE,MAAM,IAHrE1B,EAAAG,MAAYH,EAAAE,MAAAyB,IAAA,SAAAC,GAAA,MAAA,KAAAtB,EAAA,aAAWC,MAAY,SAEnCP,EAAO6B,IAAP,SAAAC,EAAeC,EAAOC,GAClB,GAAAC,GAAO3B,EAAA,aAAQN,EAAAkB,GAAAY,EAA6BC,GAAU,KACtDE,GAAOC,GAAA,eAAyBlC,EAAhCI,QAAA4B,SAAAA,EACAhC,EAAEI,QAAa0B,SAAMA,EAHzB9B,EAAAI,QAAA2B,OAAAA,EAMAE,EAAOE,SAAM,WACTC,WAAW,WACP9B,EAAA,gBAAJC,MAAwB,QASpB0B,EAAGE,SAAS,aAPhB,QAWJnC,EAAOqC,MAAQ,WAPXrC,EAAGG,MAASH,EAAAI,QAAZC,SAAAiC,SAAAtC,EAAAI,QAAA2B,QACA/B,EAAAI,QAAWC,QAAM,EACbL,EAAEI,QAAAC,SAAsBL,EAAxBE,MAAAY,SAAAd,EAAAI,QAAAC,OAAA,GACAC,EAAA,gBAAYC,MAAA,SAWpBP,EAAOuC,MAAQ,WAPfvC,EAAOI,QAAQC,QAAM,EACjBL,EAAOI,QAAMC,SAAeL,EAA5BE,MAAuCY,SAASd,EAAOI,QAAQC,OAA/D,GACAC,EAAA,gBAAeC,MAAf,YAYDjB","file":"index.min.js","sourcesContent":["/**\n * js/index.js - w3bp\n * Basic AngularJS setup for routing.\n * \n * Licensed under MIT license.\n * Copyright (C) 2016 Karim Alibhai.\n */\n\nwindow.app = function () {\n    'use strict';\n\n    const app = angular.module('w3bp', ['ngRoute', 'ngAnimate']);\n\n    app.config(['$routeProvider', '$locationProvider', ($router, $location) => {\n        $router.when('/', {\n            templateUrl: '/views/index.html',\n            controller: 'GameCtl'\n        });\n\n        $location.html5Mode(true);\n    }]);\n\n    app.controller('GameCtl', ['$scope', $scope => {\n        $scope.questions = {};\n        $scope.teams = [];\n        $scope.score = [];\n        $scope.current = { player: 0 };\n\n        $('#teamsMdl').modal('show');\n\n        $.getJSON('/questions.json', function (data) {\n            $scope.$apply(function () {\n                $scope.questions = data;\n            });\n        });\n\n        $scope.width = () => 100 / Object.keys($scope.questions).length;\n        $scope.height = () => {\n            for (let i in $scope.questions) {\n                if ($scope.questions.hasOwnProperty(i)) {\n                    return 100 / Object.keys($scope.questions[i]).length;\n                }\n            }\n        };\n\n        $scope.id = (a, b) => (a + '' + b).toLowerCase().replace(/[^a-z0-9]+/g, '-');\n\n        $scope.start = num => {\n            $scope.teams = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.substr(0, num).split('');\n            $scope.score = $scope.teams.map(_ => 0);\n            $('#teamsMdl').modal('hide');\n        };\n\n        $scope.ask = (category, points, question) => {\n            let li = $('[data-id=\"' + $scope.id(category, points) + '\"]');\n            if (li.is('.disabled')) return;\n\n            $scope.current.question = question;\n            $scope.current.category = category;\n            $scope.current.points = points;\n\n            li.addClass('clicked');\n            setTimeout(() => {\n                $('#questionMdl').modal('show');\n                li.addClass('disabled');\n            }, 2001);\n        };\n\n        $scope.right = () => {\n            $scope.score[$scope.current.player] += parseInt($scope.current.points);\n            $scope.current.player += 1;\n            if ($scope.current.player === $scope.teams.length) $scope.current.player = 0;\n            $('#questionMdl').modal('hide');\n        };\n\n        $scope.wrong = () => {\n            $scope.current.player += 1;\n            if ($scope.current.player === $scope.teams.length) $scope.current.player = 0;\n            $('#questionMdl').modal('hide');\n        };\n    }]);\n\n    return app;\n}();"],"sourceRoot":"/source/"}